@model Coontrera.Models.DTOs.UsuarioDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Crie sua Conta";
    ViewData["ActivePage"] = "Cadastro";
}

<div class="auth-page-container">
    <div class="auth-card auth-card-cadastro" data-aos="fade-up">
        <div class="logo-container">
            <a asp-controller="Home" asp-action="Index">
                <img src="~/images/logo.svg" alt="Coontrera Logo">
            </a>
        </div>
        <h2 class="form-title">@ViewData["Title"]</h2>
        <p class="form-subtitle">Preencha os campos abaixo para se cadastrar.</p>

        <div asp-validation-summary="ModelOnly" class="alert alert-danger d-flex align-items-center" role="alert" style="@(ViewData.ModelState.IsValid ? "display:none;" : "")">
             <i class="fas fa-exclamation-triangle me-2"></i>
             <div></div>
        </div>

        @if (!ViewData.ModelState.IsValid && ViewData.ModelState[""] != null)
        {
            foreach (var error in ViewData.ModelState[""].Errors)
            {
                <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center" role="alert">
                    <i class="fas fa-times-circle me-2"></i>
                    <div>@error.ErrorMessage</div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
        }

        <form asp-controller="Cadastro" asp-action="Cadastro" method="post" class="needs-validation" novalidate>
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label asp-for="Nome" class="form-label">Nome Completo</label>
                <input asp-for="Nome" class="form-control" placeholder="Seu nome completo" required maxlength="100">
                <span asp-validation-for="Nome" class="text-danger small mt-1"></span>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Telefone" class="form-label">Telefone (somente nÃºmeros)</label>
                    <input asp-for="Telefone" type="tel" class="form-control" placeholder="Ex: 16999998888" required pattern="^\d{10,11}$">
                    <span asp-validation-for="Telefone" class="text-danger small mt-1"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <input asp-for="Email" type="email" class="form-control" placeholder="seuemail@exemplo.com" required maxlength="100">
                    <span asp-validation-for="Email" class="text-danger small mt-1"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Senha" class="form-label">Senha</label>
                    <div class="input-group">
                        <input asp-for="Senha" type="password" id="cadastroSenha" class="form-control" placeholder="MÃ­nimo 6 caracteres" required minlength="6">
                        <button class="btn btn-outline-secondary" type="button" id="toggleCadastroSenha">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <span asp-validation-for="Senha" class="text-danger small mt-1"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="ConfirmarSenha" class="form-label">Confirmar Senha</label>
                     <div class="input-group">
                        <input asp-for="ConfirmarSenha" type="password" id="cadastroConfirmarSenha" class="form-control" placeholder="Repita a senha" required>
                        <button class="btn btn-outline-secondary" type="button" id="toggleCadastroConfirmarSenha">
                            <i class="fas fa-eye"></i>
                        </button>
                    </div>
                    <span asp-validation-for="ConfirmarSenha" class="text-danger small mt-1"></span>
                </div>
            </div>

            <div class="mb-4 form-check">
                <input type="checkbox" class="form-check-input" id="termos" name="termos" value="true" required>
                <label class="form-check-label" for="termos" data-bs-toggle="tooltip" data-bs-placement="top"
                       title="Ao aceitar estes Termos de Uso, vocÃª concorda e autoriza expressamente que a clÃ­nica utilize suas informaÃ§Ãµes pessoais, incluindo o nÃºmero de telefone fornecido no cadastro, para fins de contato e prestaÃ§Ã£o de serviÃ§os, conforme previsto em nossa PolÃ­tica de Privacidade. Seus dados serÃ£o tratados com seguranÃ§a e confidencialidade, em conformidade com a Lei nÂº 13.709/2018 (LGPD). VocÃª pode, a qualquer momento, revogar esta autorizaÃ§Ã£o ou solicitar mais informaÃ§Ãµes sobre o tratamento dos seus dados atravÃ©s dos canais de atendimento.">
                    Li e aceito os <a asp-controller="Home" asp-action="TermosDeUso" target="_blank">Termos de Uso</a> e <a asp-controller="Home" asp-action="PoliticaPrivacidade" target="_blank">PolÃ­tica de Privacidade</a>.
                </label>
                <div class="invalid-feedback">VocÃª deve aceitar os termos e condiÃ§Ãµes.</div>
            </div>

            <button type="submit" class="btn btn-primary w-100 py-2 fw-bold">Cadastrar e Ganhar Aula Experimental</button>
        </form>

        <div class="text-center mt-4">
            <p class="text-muted small">JÃ¡ tem uma conta? <a asp-controller="Conta" asp-action="Login">FaÃ§a Login</a></p>
        </div>
    </div>
</div>
@* MARCOS PAULO CALERA *@
@if (TempData["CadastroSucesso"] != null && (bool)TempData["CadastroSucesso"])
{
<div class="modal fade" id="popupMensagemCadastro" tabindex="-1" aria-labelledby="popupLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-content-custom p-3">
            <div class="modal-header">
                 <h5 class="modal-title w-100 text-center" id="popupLabel" style="color: var(--primary-color); font-weight:600;">ðŸŽ‰ ParabÃ©ns!</h5>
                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body py-4">
                <p>Seu cadastro foi realizado com sucesso!</p>
                <p>VocÃª acaba de ganhar uma <strong>aula experimental gratuita!</strong> <i class="fas fa-gift" style="color:var(--primary-color);"></i></p>
                <p class="small mt-3">Nossa equipe entrarÃ¡ em contato com vocÃª em breve para confirmar os detalhes. <i class="fas fa-hourglass-half" style="color:var(--primary-color);"></i></p>
                <p class="small">Agradecemos pela sua confianÃ§a e estamos ansiosos para te receber! ðŸ˜Š</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Entendido!</button>
            </div>
        </div>
    </div>
</div>
}
@* MARCOS PAULO CALERA *@
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            var modalElement = document.getElementById('popupMensagemCadastro');
            if (modalElement && '@(TempData["CadastroSucesso"] != null && (bool)TempData["CadastroSucesso"])' === 'True') {
                var myModal = new bootstrap.Modal(modalElement);
                myModal.show();
            }

            // funÃ§Ã£o auxiliar para mostrar/ocultar senha
            function setupPasswordToggle(inputId, toggleButtonId) {
                const toggleButton = document.getElementById(toggleButtonId);
                const passwordInput = document.getElementById(inputId);

                if (toggleButton && passwordInput) {
                    toggleButton.addEventListener('click', function() {
                        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                        passwordInput.setAttribute('type', type);
                        this.querySelector('i').classList.toggle('fa-eye');
                        this.querySelector('i').classList.toggle('fa-eye-slash');
                    });
                }
            }

            // aplicar aos campos de senha do cadastro
            setupPasswordToggle('cadastroSenha', 'toggleCadastroSenha');
            setupPasswordToggle('cadastroConfirmarSenha', 'toggleCadastroConfirmarSenha');
        });

        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })();
    </script>
}